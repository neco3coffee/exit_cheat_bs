name: Playwright Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      ENV: ${{ secrets.ENV }}
      DB_HOST: db
      RAILS_ENV: ${{ secrets.ENV }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      BRAWL_STARS_API_TOKEN1: ${{ secrets.BRAWL_STARS_API_TOKEN1 }}
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      API_PROXY_URL: http://${{ secrets.PROXY_AUTH_USER }}:${{ secrets.PROXY_AUTH_PASSWORD }}@${{ secrets.PROXY_SERVER }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Check curl
      run: curl --version
    - name: show IP
      run: curl ipinfo.io/ip
    - name: Test API access
      run: |
         curl -H "Authorization: Bearer ${{ secrets.BRAWL_STARS_API_TOKEN1 }}" \
         https://api.brawlstars.com/v1/brawlers
    - name: Build and Start services
      run: ENV=production docker compose -f docker-compose.yml up -d --build
    # 必要ならサービスの起動待ち
    - name: Wait for web service
      run: |
        for i in {1..100}; do
          if curl -s http://localhost:3001 > /dev/null; then
            echo "Web is up!"
            break
          fi
          echo "Waiting for web service..."
          sleep 6
        done

        # サービスが起動しなかった場合はエラーで終了
        if ! curl -s http://localhost:3001 > /dev/null; then
          echo "Web did not start in time."
          exit 1
        fi
    - name: Create and Migrate Rails DB
      run: |
        docker compose exec -T app rails db:create || true
        docker compose exec -T app rails db:migrate
    - name: Show app logs if migrate fails
      if: failure()  # ひとつ前が失敗した場合のみ実行
      run: docker compose logs app
    - name: Install dependencies
      run: npm ci
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          playwright-${{ runner.os }}-
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npm run test
    - name: Show logs on failure
      if: failure()
      run: |
        docker compose logs app
        docker compose logs solid_queue
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

services:
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${ENV:-development}
    ports:
      - "3001:3000"
    depends_on:
      - app
    environment:
      NEXT_PUBLIC_GA_ID: ${NEXT_PUBLIC_GA_ID}
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    environment:
      DB_HOST: db
      RAILS_ENV: ${ENV:-development}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      BRAWL_STARS_API_TOKEN1: ${BRAWL_STARS_API_TOKEN1}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      RAILS_LOG_TO_STDOUT: true
      # RAILS_DEVELOPMENT_HOSTS: app,app:3000
      http_proxy: ${API_PROXY_URL}
      https_proxy: ${API_PROXY_URL}
  db:
    image: postgres:16
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

volumes:
  postgres_data:
